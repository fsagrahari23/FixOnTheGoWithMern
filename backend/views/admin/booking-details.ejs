<div class="container py-4">
  <div class="row">
    <div class="col-md-12 mb-4">
      <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
          <li class="breadcrumb-item">
            <a href="/admin/dashboard">Dashboard</a>
          </li>
          <li class="breadcrumb-item">
            <a href="/admin/bookings">Manage Bookings</a>
          </li>
          <li class="breadcrumb-item active" aria-current="page">
            Booking Details
          </li>
        </ol>
      </nav>
    </div>
  </div>

  <div class="row">
    <div class="col-lg-8">
      <div id="bookingInfoCard">
        <div class="card border-0 shadow-sm mb-4">
          <div class="card-body text-center p-4">
            <div class="spinner-border text-primary" role="status">
              <span class="visually-hidden">Loading...</span>
            </div>
            <p class="mt-2">Loading booking details...</p>
          </div>
        </div>
      </div>

      <div id="trackingInfoCard" style="display: none;">
        <div class="card border-0 shadow-sm mb-4">
          <div class="card-header bg-white">
            <h5 class="mb-0">
              <i class="fas fa-map-marker-alt text-primary me-2"></i>Tracking Information
            </h5>
          </div>
          <div class="card-body p-0">
            <div id="tracking-map" style="height: 300px"></div>
          </div>
        </div>
      </div>
    </div>

    <div class="col-lg-4">
      <div id="customerInfoCard">
        <div class="card border-0 shadow-sm mb-4">
          <div class="card-body text-center p-4">
            <div class="spinner-border text-primary" role="status">
              <span class="visually-hidden">Loading...</span>
            </div>
            <p class="mt-2">Loading customer information...</p>
          </div>
        </div>
      </div>

      <div id="timelineCard">
        <div class="card border-0 shadow-sm mb-4">
          <div class="card-header bg-white">
            <h5 class="mb-0">
              <i class="fas fa-clipboard-list text-primary me-2"></i>Booking Timeline
            </h5>
          </div>
          <div class="card-body p-0">
            <ul class="timeline">
              <li class="timeline-item text-center py-4">
                <div class="spinner-border text-primary" role="status">
                  <span class="visually-hidden">Loading...</span>
                </div>
                <p class="mt-2 text-muted">Loading timeline...</p>
              </li>
            </ul>
          </div>
        </div>
      </div>

      <div id="bookingLocationCard">
        <div class="card border-0 shadow-sm">
          <div class="card-header bg-white">
            <h5 class="mb-0">
              <i class="fas fa-map-marker-alt text-primary me-2"></i>Booking Location
            </h5>
          </div>
          <div class="card-body p-0">
            <div id="booking-map" style="height: 250px"></div>
            <div class="p-3">
              <p class="mb-0 text-muted">
                <i class="fas fa-map-marker-alt text-danger me-2"></i>Loading location...
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Assign Mechanic Modal -->
<div
  class="modal fade"
  id="assignMechanicModal"
  tabindex="-1"
  aria-labelledby="assignMechanicModalLabel"
  aria-hidden="true"
>
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="assignMechanicModalLabel">
          Assign Mechanic
        </h5>
        <button
          type="button"
          class="btn-close"
          data-bs-dismiss="modal"
          aria-label="Close"
        ></button>
      </div>
      <form id="assignMechanicForm" method="POST">
        <div class="modal-body">
          <div class="mb-3">
            <label for="mechanicId" class="form-label">Select Mechanic</label>
            <select
              class="form-select"
              id="mechanicId"
              name="mechanicId"
              required
            >
              <option value="" selected disabled>Choose a mechanic...</option>
            </select>
          </div>
          <div class="alert alert-info">
            <div class="d-flex">
              <i class="fas fa-info-circle me-2"></i>
              <div>
                <p class="mb-0">
                  Only available mechanics with relevant skills are shown.
                </p>
              </div>
            </div>
          </div>
        </div>
        <div class="modal-footer">
          <button
            type="button"
            class="btn btn-secondary"
            data-bs-dismiss="modal"
          >
            Cancel
          </button>
          <button type="submit" class="btn btn-primary">Assign Mechanic</button>
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Delete Booking Modal -->
<div
  class="modal fade"
  id="deleteBookingModal"
  tabindex="-1"
  aria-labelledby="deleteBookingModalLabel"
  aria-hidden="true"
>
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="deleteBookingModalLabel">Delete Booking</h5>
        <button
          type="button"
          class="btn-close"
          data-bs-dismiss="modal"
          aria-label="Close"
        ></button>
      </div>
      <div class="modal-body">
        <p>Are you sure you want to delete this booking?</p>
        <p class="text-danger">
          This action cannot be undone. All associated data will be deleted.
        </p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
          Cancel
        </button>
        <form id="deleteBookingForm" method="POST">
          <button type="submit" class="btn btn-danger">Delete Booking</button>
        </form>
      </div>
    </div>
  </div>
</div>

<style>
  .timeline {
    position: relative;
    list-style: none;
    padding: 0;
    margin: 0;
    /* Keep the markers inside the card */
    padding-left: 16px;
  }

  .timeline-item {
    position: relative;
    padding-left: 40px;
    border-left: 2px solid #e9ecef;
  }

  .timeline-item:last-child {
    border-left-color: transparent;
  }

  .timeline-marker {
    position: absolute;
    top: 15px;
    left: -8px; /* centered on the border-left */
    width: 15px;
    height: 15px;
    border-radius: 50%;
    border: 2px solid #fff;
    box-shadow: 0 0 0 2px #e9ecef;
  }

  .timeline-content {
    position: relative;
  }

  .image-popup:hover img {
    opacity: 0.8;
    transition: opacity 0.3s ease;
  }
</style>

<!-- Leaflet JS for maps -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/leaflet.js"></script>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const urlParams = new URLSearchParams(window.location.search);
    const bookingId = window.location.pathname.split('/').pop();

    let bookingMap, trackingMap;

    // Fetch booking details from API
    async function fetchBookingDetails() {
      try {
        const response = await fetch(`/admin/api/booking/${bookingId}`);
        const data = await response.json();

        if (data.booking) {
          renderBookingInfo(data.booking);
          renderCustomerInfo(data.booking.user);
          renderTimeline(data.booking);
          initializeLocationMap(data.booking.location);
          if (data.booking.status === 'in-progress' && data.booking.mechanic) {
            document.getElementById('trackingInfoCard').style.display = 'block';
            initializeTrackingMap(data.booking.location);
          }
          setupModals(data.booking, data.availableMechanics || []);
        } else {
          console.error('Failed to fetch booking details:', data.message);
          const errorHTML = `
            <div class="card border-0 shadow-sm">
              <div class="card-body text-center p-4">
                <i class="fas fa-exclamation-triangle text-warning fa-3x mb-3"></i>
                <h5>Failed to load booking details</h5>
                <p class="text-muted">Please try refreshing the page.</p>
              </div>
            </div>
          `;
          document.getElementById('bookingInfoCard').innerHTML = errorHTML;
          document.getElementById('customerInfoCard').innerHTML = errorHTML;
          document.getElementById('timelineCard').innerHTML = errorHTML;
        }
      } catch (error) {
        console.error('Error fetching booking details:', error);
        const errorHTML = `
          <div class="card border-0 shadow-sm">
            <div class="card-body text-center p-4">
              <i class="fas fa-exclamation-triangle text-danger fa-3x mb-3"></i>
              <h5>Error loading booking details</h5>
              <p class="text-muted">Please check your connection and try again.</p>
            </div>
          </div>
        `;
        document.getElementById('bookingInfoCard').innerHTML = errorHTML;
        document.getElementById('customerInfoCard').innerHTML = errorHTML;
        document.getElementById('timelineCard').innerHTML = errorHTML;
      }
    }

    // Render booking information
    function renderBookingInfo(booking) {
      const imagesHTML = booking.images && booking.images.length > 0 ? `
        <div class="mb-4">
          <h6 class="fw-bold">Images</h6>
          <div class="row g-3">
            ${booking.images.map(image => `
              <div class="col-md-4 col-6">
                <a href="${image}" target="_blank" class="image-popup">
                  <img src="${image}" alt="Booking Image" class="img-fluid rounded shadow-sm" style="object-fit: cover; height: 150px; width: 100%" />
                </a>
              </div>
            `).join('')}
          </div>
        </div>
      ` : '';

      const serviceNotesHTML = booking.status === 'completed' && booking.notes ? `
        <div class="mb-4">
          <h6 class="fw-bold">Service Notes</h6>
          <div class="alert alert-light">${booking.notes}</div>
        </div>
      ` : '';

      const paymentDetailsHTML = booking.status === 'completed' && booking.payment ? `
        <div class="mb-4">
          <h6 class="fw-bold">Payment Details</h6>
          <div class="card bg-light border-0">
            <div class="card-body">
              <div class="row">
                <div class="col-md-6">
                  <p class="text-muted mb-1">Amount</p>
                  <p class="fw-bold text-success mb-3">$${booking.payment.amount.toFixed(2)}</p>
                </div>
                <div class="col-md-6">
                  <p class="text-muted mb-1">Status</p>
                  <p class="fw-bold mb-3">${booking.payment.status === 'completed' ? '<span class="text-success">Completed</span>' : '<span class="text-warning">Pending</span>'}</p>
                </div>
              </div>
              ${booking.payment.status === 'completed' ? `
                <p class="text-muted mb-1">Transaction ID</p>
                <p class="fw-bold mb-0">${booking.payment.transactionId}</p>
              ` : ''}
            </div>
          </div>
        </div>
      ` : '';

      const assignButtonHTML = booking.status === 'pending' && !booking.mechanic ? `
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#assignMechanicModal">
          <i class="fas fa-user-plus me-2"></i> Assign Mechanic
        </button>
      ` : '';

      const bookingInfoHTML = `
        <div class="card border-0 shadow-sm mb-4">
          <div class="card-header bg-white d-flex justify-content-between align-items-center">
            <h5 class="mb-0">
              <i class="fas fa-info-circle text-primary me-2"></i>Booking Information
            </h5>
            <span class="booking-status status-${booking.status}">${booking.status}</span>
          </div>
          <div class="card-body">
            <div class="row mb-4">
              <div class="col-md-6">
                <p class="text-muted mb-1">Booking ID</p>
                <p class="fw-bold mb-3">${booking._id}</p>
                <p class="text-muted mb-1">Date & Time</p>
                <p class="fw-bold mb-3">${new Date(booking.createdAt).toLocaleString()}</p>
                <p class="text-muted mb-1">Problem Category</p>
                <p class="fw-bold mb-3">${booking.problemCategory}</p>
                <p class="text-muted mb-1">Status</p>
                <p class="fw-bold mb-0">${booking.status}</p>
              </div>
              <div class="col-md-6">
                <p class="text-muted mb-1">Location</p>
                <p class="fw-bold mb-3">${booking.location.address}</p>
                ${booking.mechanic ? `
                  <p class="text-muted mb-1">Mechanic</p>
                  <div class="d-flex align-items-center mb-3">
                    <div class="avatar-circle bg-success text-white me-2">${booking.mechanic.name.charAt(0).toUpperCase()}</div>
                    <div>
                      <p class="fw-bold mb-0">${booking.mechanic.name}</p>
                      <p class="small text-muted mb-0">${booking.mechanic.phone}</p>
                    </div>
                  </div>
                ` : `
                  <p class="text-muted mb-1">Mechanic</p>
                  <p class="fw-bold mb-3">Not assigned yet</p>
                `}
                ${booking.status === 'completed' && booking.payment ? `
                  <p class="text-muted mb-1">Payment Status</p>
                  <p class="fw-bold mb-0">${booking.payment.status === 'completed' ? '<span class="text-success">Paid</span>' : '<span class="text-warning">Pending Payment</span>'}</p>
                ` : ''}
              </div>
            </div>
            <div class="mb-4">
              <h6 class="fw-bold">Description</h6>
              <p class="mb-0">${booking.description}</p>
            </div>
            ${imagesHTML}
            ${serviceNotesHTML}
            ${paymentDetailsHTML}
            <div class="d-flex flex-wrap gap-2 mt-4">
              <a href="/admin/bookings" class="btn btn-outline-secondary">
                <i class="fas fa-arrow-left me-2"></i> Back to Bookings
              </a>
              ${assignButtonHTML}
              <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteBookingModal">
                <i class="fas fa-trash me-2"></i> Delete Booking
              </button>
            </div>
          </div>
        </div>
      `;

      document.getElementById('bookingInfoCard').innerHTML = bookingInfoHTML;
    }

    // Render customer information
    function renderCustomerInfo(user) {
      const customerInfoHTML = `
        <div class="card border-0 shadow-sm mb-4">
          <div class="card-header bg-white">
            <h5 class="mb-0">
              <i class="fas fa-user text-primary me-2"></i>Customer Information
            </h5>
          </div>
          <div class="card-body">
            <div class="text-center mb-4">
              <div class="avatar-circle-large bg-primary text-white mx-auto mb-3">${user.name.charAt(0).toUpperCase()}</div>
              <h5 class="mb-1">${user.name}</h5>
              <p class="text-muted mb-0">${user.email}</p>
            </div>
            <div class="mb-3">
              <p class="text-muted mb-1">Phone</p>
              <p class="fw-bold mb-3">${user.phone}</p>
              <p class="text-muted mb-1">Address</p>
              <p class="fw-bold mb-0">${user.address}</p>
            </div>
            <div class="d-grid gap-2">
              <a href="/admin/user/${user._id}" class="btn btn-outline-primary">
                <i class="fas fa-user me-2"></i> View User Profile
              </a>
            </div>
          </div>
        </div>
      `;

      document.getElementById('customerInfoCard').innerHTML = customerInfoHTML;
    }

    // Render timeline
    function renderTimeline(booking) {
      const timelineItems = [];

      // Booking created
      timelineItems.push(`
        <li class="timeline-item">
          <div class="timeline-marker bg-success"></div>
          <div class="timeline-content p-3">
            <h6 class="mb-1">Booking Created</h6>
            <p class="small text-muted mb-0">${new Date(booking.createdAt).toLocaleString()}</p>
          </div>
        </li>
      `);

      // Mechanic assigned
      if (booking.status !== 'pending' || booking.mechanic) {
        timelineItems.push(`
          <li class="timeline-item">
            <div class="timeline-marker ${booking.mechanic ? 'bg-success' : 'bg-secondary'}"></div>
            <div class="timeline-content p-3">
              <h6 class="mb-1">Mechanic Assigned</h6>
              ${booking.mechanic ? `
                <p class="small mb-1">${booking.mechanic.name}</p>
                <p class="small text-muted mb-0">Assigned on ${new Date(booking.updatedAt).toLocaleString()}</p>
              ` : `
                <p class="small text-muted mb-0">Waiting for mechanic assignment</p>
              `}
            </div>
          </li>
        `);
      }

      // Booking accepted
      if (['accepted', 'in-progress', 'completed'].includes(booking.status)) {
        timelineItems.push(`
          <li class="timeline-item">
            <div class="timeline-marker bg-success"></div>
            <div class="timeline-content p-3">
              <h6 class="mb-1">Booking Accepted</h6>
              <p class="small text-muted mb-0">Mechanic accepted the booking</p>
            </div>
          </li>
        `);
      }

      // Service started
      if (['in-progress', 'completed'].includes(booking.status)) {
        timelineItems.push(`
          <li class="timeline-item">
            <div class="timeline-marker bg-success"></div>
            <div class="timeline-content p-3">
              <h6 class="mb-1">Service Started</h6>
              <p class="small text-muted mb-0">Mechanic started working on the bike</p>
            </div>
          </li>
        `);
      }

      // Service completed
      if (booking.status === 'completed') {
        timelineItems.push(`
          <li class="timeline-item">
            <div class="timeline-marker bg-success"></div>
            <div class="timeline-content p-3">
              <h6 class="mb-1">Service Completed</h6>
              <p class="small text-muted mb-0">Service has been completed successfully</p>
            </div>
          </li>
        `);

        // Payment
        timelineItems.push(`
          <li class="timeline-item">
            <div class="timeline-marker ${booking.payment && booking.payment.status === 'completed' ? 'bg-success' : 'bg-warning'}"></div>
            <div class="timeline-content p-3">
              <h6 class="mb-1">Payment</h6>
              <p class="small ${booking.payment && booking.payment.status === 'completed' ? 'text-success' : 'text-warning'} mb-0">
                ${booking.payment && booking.payment.status === 'completed' ? 'Payment completed' : 'Payment pending'}
              </p>
            </div>
          </li>
        `);
      }

      // Cancelled
      if (booking.status === 'cancelled') {
        timelineItems.push(`
          <li class="timeline-item">
            <div class="timeline-marker bg-danger"></div>
            <div class="timeline-content p-3">
              <h6 class="mb-1">Booking Cancelled</h6>
              <p class="small text-muted mb-0">Booking was cancelled</p>
            </div>
          </li>
        `);
      }

      const timelineHTML = `
        <div class="card border-0 shadow-sm mb-4">
          <div class="card-header bg-white">
            <h5 class="mb-0">
              <i class="fas fa-clipboard-list text-primary me-2"></i>Booking Timeline
            </h5>
          </div>
          <div class="card-body p-0">
            <ul class="timeline">
              ${timelineItems.join('')}
            </ul>
          </div>
        </div>
      `;

      document.getElementById('timelineCard').innerHTML = timelineHTML;
    }

    // Initialize location map
    function initializeLocationMap(location) {
      const lat = location.coordinates ? location.coordinates[1] : 0;
      const lng = location.coordinates ? location.coordinates[0] : 0;

      bookingMap = L.map('booking-map').setView([lat, lng], 13);
      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
      }).addTo(bookingMap);

      L.marker([lat, lng]).addTo(bookingMap)
        .bindPopup('Booking Location')
        .openPopup();

      // Update location text
      document.querySelector('#bookingLocationCard .p-3 p').innerHTML = `
        <i class="fas fa-map-marker-alt text-danger me-2"></i>${location.address}
      `;
    }

    // Initialize tracking map
    function initializeTrackingMap(location) {
      const lat = location.coordinates ? location.coordinates[1] : 0;
      const lng = location.coordinates ? location.coordinates[0] : 0;

      trackingMap = L.map('tracking-map').setView([lat, lng], 13);
      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
      }).addTo(trackingMap);

      L.marker([lat, lng]).addTo(trackingMap)
        .bindPopup('Current Location')
        .openPopup();
    }

    // Setup modals
    function setupModals(booking, availableMechanics) {
      // Assign mechanic modal
      const mechanicSelect = document.getElementById('mechanicId');
      mechanicSelect.innerHTML = '<option value="" selected disabled>Choose a mechanic...</option>';

      if (availableMechanics.length === 0) {
        mechanicSelect.innerHTML += '<option value="" disabled>No matching mechanics available</option>';
      } else {
        availableMechanics.forEach(mechanic => {
          mechanicSelect.innerHTML += `
            <option value="${mechanic._id}">${mechanic.name} - ${mechanic.specialization ? mechanic.specialization.join(', ') : 'General'} - ${mechanic.experience} years</option>
          `;
        });
      }

      document.getElementById('assignMechanicForm').action = `/admin/booking/${booking._id}/assign-mechanic`;

      // Delete booking modal
      document.getElementById('deleteBookingForm').action = `/admin/booking/${booking._id}/delete`;
    }

    // Load data on page load
    fetchBookingDetails();
  });
</script>
