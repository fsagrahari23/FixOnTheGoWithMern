<div class="container py-4">
  <div class="row">
    <div class="col-md-12 mb-4">
      <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
          <li class="breadcrumb-item">
            <a href="/admin/dashboard">Dashboard</a>
          </li>
          <li class="breadcrumb-item">
            <a href="/admin/users">Manage Users</a>
          </li>
          <li class="breadcrumb-item active" aria-current="page">
            User Details
          </li>
        </ol>
      </nav>
    </div>
  </div>

  <div class="row">
    <div class="col-lg-4 mb-4">
      <div id="userProfileCard">
        <div class="card border-0 shadow-sm">
          <div class="card-body text-center p-4">
            <div class="spinner-border text-primary" role="status">
              <span class="visually-hidden">Loading...</span>
            </div>
            <p class="mt-2">Loading user details...</p>
          </div>
        </div>
      </div>

      <div class="card border-0 shadow-sm mt-4">
        <div class="card-header bg-white">
          <h5 class="mb-0">
            <i class="fas fa-map-marker-alt text-primary me-2"></i>User Location
          </h5>
        </div>
        <div class="card-body p-0">
          <div id="user-map" style="height: 250px"></div>
        </div>
      </div>
    </div>

    <div class="col-lg-8">
      <div class="card border-0 shadow-sm mb-4">
        <div class="card-header bg-white d-flex justify-content-between align-items-center">
          <h5 class="mb-0">
            <i class="fas fa-clipboard-list text-primary me-2"></i>Booking History
          </h5>
          <span class="badge bg-primary rounded-pill" id="bookingCount">0 Bookings</span>
        </div>
        <div class="card-body p-0">
          <div id="bookingHistoryContent">
            <div class="text-center py-5">
              <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
              </div>
              <p class="mt-2">Loading booking history...</p>
            </div>
          </div>
        </div>
      </div>

      <div class="row">
        <div class="col-md-6">
          <div class="card border-0 shadow-sm mb-4">
            <div class="card-header bg-white">
              <h5 class="mb-0">
                <i class="fas fa-chart-pie text-primary me-2"></i>Booking Categories
              </h5>
            </div>
            <div class="card-body">
              <canvas id="categoryChart" height="250"></canvas>
            </div>
          </div>
        </div>
        <div class="col-md-6">
          <div class="card border-0 shadow-sm mb-4">
            <div class="card-header bg-white">
              <h5 class="mb-0">
                <i class="fas fa-chart-line text-primary me-2"></i>Booking Activity
              </h5>
            </div>
            <div class="card-body">
              <canvas id="activityChart" height="250"></canvas>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Delete User Modal -->
<div
  class="modal fade"
  id="deleteUserModal"
  tabindex="-1"
  aria-labelledby="deleteUserModalLabel"
  aria-hidden="true"
>
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="deleteUserModalLabel">Delete User</h5>
        <button
          type="button"
          class="btn-close"
          data-bs-dismiss="modal"
          aria-label="Close"
        ></button>
      </div>
      <div class="modal-body">
        <p>
          Are you sure you want to delete the user
          <strong><%= user.name %></strong>?
        </p>
        <p class="text-danger">
          This action cannot be undone. All associated bookings and data will be
          deleted.
        </p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
          Cancel
        </button>
        <form action="/admin/user/<%= user._id %>/delete" method="POST">
          <button type="submit" class="btn btn-danger">Delete User</button>
        </form>
      </div>
    </div>
  </div>
</div>

<script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const urlParams = new URLSearchParams(window.location.search);
    const userId = window.location.pathname.split('/').pop();

    let userMap, categoryChart, activityChart;

    // Fetch user details from API
    async function fetchUserDetails() {
      try {
        const response = await fetch(`/admin/api/user/${userId}`);
        const data = await response.json();

        if (data.user) {
          renderUserProfile(data.user);
          renderBookingHistory(data.bookings || []);
          initializeCharts(data.bookings || []);
        } else {
          console.error('Failed to fetch user details:', data.message);
          document.getElementById('userProfileCard').innerHTML = `
            <div class="card border-0 shadow-sm">
              <div class="card-body text-center p-4">
                <i class="fas fa-exclamation-triangle text-warning fa-3x mb-3"></i>
                <h5>Failed to load user details</h5>
                <p class="text-muted">Please try refreshing the page.</p>
              </div>
            </div>
          `;
        }
      } catch (error) {
        console.error('Error fetching user details:', error);
        document.getElementById('userProfileCard').innerHTML = `
          <div class="card border-0 shadow-sm">
            <div class="card-body text-center p-4">
              <i class="fas fa-exclamation-triangle text-danger fa-3x mb-3"></i>
              <h5>Error loading user details</h5>
              <p class="text-muted">Please check your connection and try again.</p>
            </div>
          </div>
        `;
      }
    }

    // Render user profile
    function renderUserProfile(user) {
      const profileHTML = `
        <div class="card border-0 shadow-sm">
          <div class="card-body text-center p-4">
            <div class="avatar-circle-large bg-primary text-white mx-auto mb-3">
              ${user.name.charAt(0).toUpperCase()}
            </div>
            <h4 class="mb-1">${user.name}</h4>
            <p class="text-muted mb-3">${user.email}</p>

            <div class="d-flex justify-content-center mb-3">
              <span class="badge bg-primary rounded-pill px-3 py-2">
                <i class="fas fa-user me-1"></i> User
              </span>
              <span class="badge bg-success rounded-pill px-3 py-2 ms-2">
                Active
              </span>
            </div>

            <div class="border-top pt-3 mt-3">
              <div class="row text-start">
                <div class="col-6 mb-2">
                  <p class="text-muted mb-1 small">Member Since</p>
                  <p class="mb-0 fw-bold">
                    ${new Date(user.createdAt).toLocaleDateString()}
                  </p>
                </div>
                <div class="col-6 mb-2">
                  <p class="text-muted mb-1 small">Total Bookings</p>
                  <p class="mb-0 fw-bold">${user.bookingCount || 0}</p>
                </div>
                <div class="col-12 mb-2">
                  <p class="text-muted mb-1 small">Phone</p>
                  <p class="mb-0 fw-bold">${user.phone || 'N/A'}</p>
                </div>
                <div class="col-12 mb-2">
                  <p class="text-muted mb-1 small">Address</p>
                  <p class="mb-0 fw-bold">${user.address || 'N/A'}</p>
                </div>
              </div>
            </div>

            <div class="mt-3 d-grid gap-2">
              <button type="button" class="btn btn-danger" onclick="deleteUser('${user._id}', '${user.name}')">
                <i class="fas fa-trash me-2"></i> Delete User
              </button>
            </div>
          </div>
        </div>
      `;

      document.getElementById('userProfileCard').innerHTML = profileHTML;

      // Initialize map with user location
      if (user.location && user.location.coordinates) {
        const lat = user.location.coordinates[1] || 0;
        const lng = user.location.coordinates[0] || 0;

        userMap = L.map('user-map').setView([lat, lng], 13);
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
          attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(userMap);

        L.marker([lat, lng]).addTo(userMap)
          .bindPopup('User Location')
          .openPopup();
      } else {
        // Default map if no location
        userMap = L.map('user-map').setView([0, 0], 2);
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
          attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(userMap);
      }
    }

    // Render booking history
    function renderBookingHistory(bookings) {
      const bookingCount = document.getElementById('bookingCount');
      bookingCount.textContent = `${bookings.length} Bookings`;

      if (bookings.length === 0) {
        document.getElementById('bookingHistoryContent').innerHTML = `
          <div class="text-center py-5">
            <img src="/images/empty-bookings.png" alt="No Bookings" class="img-fluid mb-3" style="max-width: 200px;">
            <h5>No bookings found</h5>
            <p class="text-muted">This user hasn't made any bookings yet.</p>
          </div>
        `;
        return;
      }

      const tableHTML = `
        <div class="table-responsive">
          <table class="table table-hover align-middle">
            <thead class="table-light">
              <tr>
                <th>Date</th>
                <th>Problem</th>
                <th>Mechanic</th>
                <th>Status</th>
                <th>Payment</th>
                <th>Action</th>
              </tr>
            </thead>
            <tbody>
              ${bookings.map(booking => `
                <tr>
                  <td>
                    <div class="d-flex flex-column">
                      <span>${new Date(booking.createdAt).toLocaleDateString()}</span>
                      <small class="text-muted">${new Date(booking.createdAt).toLocaleTimeString()}</small>
                    </div>
                  </td>
                  <td>
                    <span class="d-inline-block text-truncate" style="max-width: 150px" title="${booking.problemCategory}">
                      ${booking.problemCategory}
                    </span>
                  </td>
                  <td>
                    ${booking.mechanic ? `
                      <div class="d-flex align-items-center">
                        <div class="avatar-circle bg-success text-white me-2">
                          ${booking.mechanic.name.charAt(0).toUpperCase()}
                        </div>
                        <span>${booking.mechanic.name}</span>
                      </div>
                    ` : '<span class="text-muted">Not assigned</span>'}
                  </td>
                  <td>
                    <span class="booking-status status-${booking.status}">${booking.status}</span>
                  </td>
                  <td>
                    ${booking.status === 'completed' ? (
                      booking.payment && booking.payment.status === 'completed' ? `
                        <span class="badge bg-success">Paid</span>
                        <span class="d-block text-success fw-bold mt-1">$${booking.payment.amount.toFixed(2)}</span>
                      ` : '<span class="badge bg-warning text-dark">Pending</span>'
                    ) : '<span class="badge bg-secondary">N/A</span>'}
                  </td>
                  <td>
                    <a href="/admin/booking/${booking._id}" class="btn btn-sm btn-primary">
                      <i class="fas fa-eye"></i> View
                    </a>
                  </td>
                </tr>
              `).join('')}
            </tbody>
          </table>
        </div>
      `;

      document.getElementById('bookingHistoryContent').innerHTML = tableHTML;
    }

    // Delete user function
    window.deleteUser = function(userId, userName) {
      if (confirm(`Are you sure you want to delete the user ${userName}? This action cannot be undone. All associated bookings and data will be deleted.`)) {
        // Create a form and submit it
        const form = document.createElement('form');
        form.method = 'POST';
        form.action = `/admin/user/${userId}/delete`;
        document.body.appendChild(form);
        form.submit();
      }
    };

    // Initialize charts
    function initializeCharts(bookings) {
      // Category Chart
      if (document.getElementById('categoryChart')) {
        const categories = {};
        bookings.forEach(booking => {
          const category = booking.problemCategory;
          if (!categories[category]) {
            categories[category] = 0;
          }
          categories[category]++;
        });

        const categoryLabels = Object.keys(categories);
        const categoryData = Object.values(categories);

        const categoryCtx = document.getElementById('categoryChart').getContext('2d');
        if (categoryChart) {
          categoryChart.destroy();
        }
        categoryChart = new Chart(categoryCtx, {
          type: 'doughnut',
          data: {
            labels: categoryLabels,
            datasets: [{
              data: categoryData,
              backgroundColor: [
                '#4361ee', '#3a0ca3', '#7209b7', '#f72585', '#4cc9f0',
                '#4895ef', '#560bad', '#f3722c', '#f8961e', '#90be6d'
              ],
              borderWidth: 0
            }]
          },
          options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
              legend: {
                position: 'bottom',
                labels: {
                  boxWidth: 12,
                  padding: 15
                }
              }
            },
            cutout: '70%'
          }
        });
      }

      // Activity Chart
      if (document.getElementById('activityChart')) {
        const months = [];
        const bookingCounts = [];

        // Get last 6 months
        for (let i = 5; i >= 0; i--) {
          const date = new Date();
          date.setMonth(date.getMonth() - i);
          months.push(date.toLocaleString('default', { month: 'short' }));
          bookingCounts.push(0);
        }

        // Calculate bookings for each month
        bookings.forEach(booking => {
          const bookingDate = new Date(booking.createdAt);
          const currentDate = new Date();
          const sixMonthsAgo = new Date();
          sixMonthsAgo.setMonth(currentDate.getMonth() - 5);

          if (bookingDate >= sixMonthsAgo) {
            const monthIndex = currentDate.getMonth() - bookingDate.getMonth();
            const normalizedIndex = monthIndex < 0 ? monthIndex + 12 : monthIndex;
            if (normalizedIndex < 6) {
              bookingCounts[5 - normalizedIndex]++;
            }
          }
        });

        const activityCtx = document.getElementById('activityChart').getContext('2d');
        if (activityChart) {
          activityChart.destroy();
        }
        activityChart = new Chart(activityCtx, {
          type: 'line',
          data: {
            labels: months,
            datasets: [{
              label: 'Bookings',
              data: bookingCounts,
              borderColor: '#4361ee',
              backgroundColor: 'rgba(67, 97, 238, 0.1)',
              borderWidth: 2,
              tension: 0.3,
              fill: true
            }]
          },
          options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
              legend: {
                display: false
              }
            },
            scales: {
              y: {
                beginAtZero: true,
                ticks: {
                  precision: 0
                }
              }
            }
          }
        });
      }
    }

    // Load data on page load
    fetchUserDetails();
  });
</script>
